
#include <ESP8266WiFi.h>                              //including ESP8266 wifi library inorder to send notification to the user
#define BLYNK_PRINT Serial                            //to print messages in the blynk application
#include <BlynkSimpleEsp8266.h>                       //blynk library for embeded hardware that works with arduino, ESP8266 module
BlynkTimer timer;                                     //to trigger any specific output

char auth[] = "Aq3T788KM0mPd41P2657Y-K-MI36nHHT";     //authentication code received via email once you register for blynk app on ios or android
char ssid[] = "SASKTEL03T2";                          //name of the wifi your device is connected to
char pass[] = "n28gdn7vb6d2";                         //passcode of the wifi

const int Flame_Sensor = 11;                          //flame sensor set to pin 11 of arduino
int Buzzer = 9;                                       //buzzer to pin 9
int flame = HIGH;                                     //we keep the flame HIGH as default(whent everything is normal)
int red_led = 5;                                      //red led is set to pin 5
int green_led = 6;                                    //green led is set to pin 6
const int motor = 8;                                  //motor is set to pin 8

int Y = 0;
bool x;                                               //bool variable
void Activate_on_fire()                               //void function that gets activate on fire
{
  int sensor = digitalRead(D0);                       //sensor read from D0 pin
  if(sensor == 1 && Y ==0)                            //if sensor is high and Y is 0
  {
    Serial.println("fire!!! fire !!! fire!!!");       //send message fire!!! fire!!! fire!!!
    Blynk.notify("Fire in premises");               
    Y = 1;                                            //Y is set to 1 now
  }
  else if(sensor == 0)                                //if the sensor reading is LOW
  {
    Y = 0;                                            //keep Y equal to 0
  }
}

void setup()                                          //void setup function
{
  Blynk.begin(auth, ssid, pass);                      //blynk will try to interact with the wifi 
  pinMode(D0, INPUT_PULLUP);                          //configure the D0 pin to behave as input pullup
  timer.setInterval(1000L,Activate_on_fire);          //call the action of void activate on fire function
  pinMode(Buzzer, OUTPUT);                            //buzzer pin is set as output pin
  pinMode(red_led, OUTPUT);                           //red led pin as output pin
  pinMode(green_led, OUTPUT);                         //green led pin as output pin
  pinMode(motor, OUTPUT);                             //motor pin as output pin
  pinMode(Flame_Sensor, INPUT);                       //flame sensor pin as an input pin
}

void loop()                                           //void loop function
{
  flame = digitalRead(Flame_Sensor);                  //flame variable read from pin 11 that flame_sensor is set to 

  if (flame == LOW)                                   //if flame is low(i.e is case of fire
  {
    digitalWrite(green_led, LOW);                     //green led goes OFF
    digitalWrite(red_led, HIGH);                      //red led turns ON
    delay(100);                                       //wait for 100 milisec
    digitalWrite(red_led, LOW);                       //again red led low
    delay(100);                                       //wait for 100 milisec
    digitalWrite(red_led, HIGH);                      //again red led high inorder to make blink red led
    digitalWrite(motor, HIGH);                        //motor will start
    tone(Buzzer, 4000);                               //alarm will start ringing
    delay(100);                                       //wait for 100ms
    noTone(Buzzer);                                   //no tone function to break the tone of alarm and creat beep beep pattern
  }
  else                                                //else 
  {
    noTone(Buzzer);                                   //keep alarm OFF
    digitalWrite(green_led, HIGH);                    //Keep green led ON
    digitalWrite(motor, LOW);                         //MOtor OFF
    digitalWrite(red_led, LOW);                       //and red led OFF
  }
  Blynk.run();                                        //keeps the blynk library running
  timer.run();                                        //execute the timer defined above
}
